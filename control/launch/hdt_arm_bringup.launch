<?xml version="1.0"?>
<launch>
  <arg name="debug" default="false" />
  <arg name="simulation" default="false" />
  <arg name="controller_type" default="xbox" />
  
  <!-- rqt console for filtering ROS logging messages by node -->
  <!-- <node name="rqt_console" pkg="rqt_console" type="rqt_console"/> -->
 

  <!-- load robot description -->
  <param name="robot_description"
    command="$(find xacro)/xacro '$(find hdt_6dof_a24_pincer_description)/urdf/hdt_arm.xacro'" />


    

  <!-- load the hardware configuration -->
  <rosparam command="load" file="$(find hdt_6dof_a24_pincer_description)/config/hardware.yaml" />
  
  <!-- load the controller configuration -->
  <rosparam command="load" file="$(find hdt_6dof_a24_pincer_description)/config/controllers.yaml" />
  
  <!--load parameter file mapping joystick axis to joints -->
  <!--also configures button mapping for start/stop control, etc. -->
  <!-- <rosparam command="load" file="$(eval find('hdt_6dof_a24_pincer_description') + '/config/joystick_map_' + controller_type + '.yaml')" /> -->
  
    <!-- load the serial nodes -->
    <node name="serial_node" pkg="rosserial_python" type="serial_node.py" respawn="true" output="screen" args="tcp 11411" unless="$(arg simulation)"/>
    <node name="rosserial_message_info" pkg="rosserial_python" type="message_info_service.py" unless="$(arg simulation)"/>


  <!-- load the hardware interface -->
  <node name="adroit_control" pkg="hdt_adroit_control" type="adroit_control" respawn="false" output="screen">
    <param name="robot_name" value="hdt_arm" /> 
    <param name="fake_execution" value="$(arg simulation)" /> 
  </node>

  <!-- load the actuator debug interface and rqt GUI for interacting with it-->
  <node name="adroit_debug" pkg="hdt_adroit_debug" type="hdt_adroit_console" respawn="false" output="screen" if="$(arg debug)"/>

  <node name="rqt_gui" pkg="rqt_gui" type="rqt_gui" args="--perspective-file $(find hdt_adroit_debug)/config/debug_services.perspective" respawn="false" output="screen" if="$(arg debug)"/>
  

  <!-- load and start controllers for trajectory control-->
  <node name="controller_manager_spawn" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="spawn 
  /hdt_arm/joint_state_controller
  /hdt_arm/pincer_joint_position_controller 
  /hdt_arm/arm_controller" />
  

   

  <!-- load but do not start controllers for joint by joint control-->
  <node name="controller_manager_load" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load 
  /hdt_arm/joint1_position_controller 
  /hdt_arm/joint2_position_controller 
  /hdt_arm/joint3_position_controller 
  /hdt_arm/joint4_position_controller 
  /hdt_arm/joint5_position_controller 
  /hdt_arm/joint6_position_controller 
  /hdt_arm/joint1_velocity_controller 
  /hdt_arm/joint2_velocity_controller 
  /hdt_arm/joint3_velocity_controller 
  /hdt_arm/joint4_velocity_controller 
  /hdt_arm/joint5_velocity_controller
  /hdt_arm/joint6_velocity_controller  

  /hdt_arm/pincer_joint_velocity_controller" />


  <node name="rqt_multiplot" pkg="rqt_multiplot"  type="rqt_multiplot" respawn="false" output="screen" args="--force-discover --multiplot-config $(find hdt_6dof_a24_pincer_bringup)/support_files/multiplot.xml">
  </node>

  <!-- shell script to wait for /joint_states topic -->
  <node name="delay_script" pkg="hdt_6dof_a24_pincer_bringup" type="delay_script.sh" args="$(arg controller_type)" output="screen"/>

  <node pkg="tf2_ros" type="static_transform_publisher" name="world_broadcaster" args="0 0 0 0 0 0 1 world base_link" />


</launch>